// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order-service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Order struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Items                []string `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price                float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	Destination          string   `protobuf:"bytes,5,opt,name=destination,proto3" json:"destination,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_43390cf179a4638a, []int{0}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetItems() []string {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Order) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Order) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Order) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func init() {
	proto.RegisterType((*Order)(nil), "v1.Order")
}

func init() {
	proto.RegisterFile("order-service.proto", fileDescriptor_43390cf179a4638a)
}

var fileDescriptor_43390cf179a4638a = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x49, 0xea, 0x0a, 0x1b, 0x8b, 0x87, 0xe8, 0x21, 0x14, 0x91, 0xe0, 0x69, 0x2f, 0xa6,
	0x56, 0x4f, 0x3e, 0x82, 0x27, 0x61, 0x0b, 0xde, 0xd3, 0x64, 0x5c, 0x07, 0xea, 0x26, 0x4c, 0xd2,
	0xf5, 0x11, 0x7c, 0x6d, 0xd9, 0xc4, 0x15, 0x8f, 0xf3, 0xf1, 0x7d, 0x30, 0xbf, 0xb8, 0x0a, 0xe4,
	0x81, 0xee, 0x13, 0xd0, 0x84, 0x0e, 0x4c, 0xa4, 0x90, 0x83, 0xe4, 0xd3, 0x6e, 0x73, 0x3b, 0x84,
	0x30, 0x1c, 0x61, 0x5b, 0xc8, 0xe1, 0xf4, 0xbe, 0xfd, 0x22, 0x1b, 0x23, 0x50, 0xaa, 0xce, 0xdd,
	0x37, 0x13, 0xcd, 0xeb, 0xdc, 0xca, 0x4b, 0xc1, 0xd1, 0x2b, 0xa6, 0x59, 0xd7, 0xf6, 0x1c, 0xbd,
	0xbc, 0x16, 0x0d, 0x66, 0xf8, 0x4c, 0x8a, 0xeb, 0x55, 0xd7, 0xf6, 0xf5, 0x90, 0x5a, 0x5c, 0x78,
	0x48, 0x8e, 0x30, 0x66, 0x0c, 0xa3, 0x5a, 0x15, 0xfd, 0x3f, 0x9a, 0xbb, 0x48, 0xe8, 0x40, 0x9d,
	0x69, 0xd6, 0xf1, 0xbe, 0x1e, 0xbf, 0x5d, 0xc6, 0xd1, 0x96, 0xae, 0xf9, 0xeb, 0x16, 0xf4, 0xf8,
	0x22, 0xd6, 0xe5, 0x91, 0x7d, 0xdd, 0x20, 0x9f, 0xc5, 0x3a, 0x81, 0x25, 0xf7, 0x51, 0x68, 0x92,
	0x37, 0xa6, 0x4e, 0x31, 0xcb, 0x14, 0xb3, 0xcf, 0x84, 0xe3, 0xf0, 0x66, 0x8f, 0x27, 0xd8, 0xb4,
	0x66, 0xda, 0x99, 0x62, 0x3e, 0xb0, 0xc3, 0x79, 0x51, 0x9e, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x1f, 0x5b, 0xdf, 0x51, 0x16, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OrderServiceClient is the client API for OrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderServiceClient interface {
	SearchOrders(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (OrderService_SearchOrdersClient, error)
}

type orderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOrderServiceClient(cc grpc.ClientConnInterface) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) SearchOrders(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (OrderService_SearchOrdersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_OrderService_serviceDesc.Streams[0], "/v1.OrderService/searchOrders", opts...)
	if err != nil {
		return nil, err
	}
	x := &orderServiceSearchOrdersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type OrderService_SearchOrdersClient interface {
	Recv() (*Order, error)
	grpc.ClientStream
}

type orderServiceSearchOrdersClient struct {
	grpc.ClientStream
}

func (x *orderServiceSearchOrdersClient) Recv() (*Order, error) {
	m := new(Order)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// OrderServiceServer is the server API for OrderService service.
type OrderServiceServer interface {
	SearchOrders(*wrappers.StringValue, OrderService_SearchOrdersServer) error
}

// UnimplementedOrderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOrderServiceServer struct {
}

func (*UnimplementedOrderServiceServer) SearchOrders(req *wrappers.StringValue, srv OrderService_SearchOrdersServer) error {
	return status.Errorf(codes.Unimplemented, "method SearchOrders not implemented")
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_SearchOrders_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(wrappers.StringValue)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(OrderServiceServer).SearchOrders(m, &orderServiceSearchOrdersServer{stream})
}

type OrderService_SearchOrdersServer interface {
	Send(*Order) error
	grpc.ServerStream
}

type orderServiceSearchOrdersServer struct {
	grpc.ServerStream
}

func (x *orderServiceSearchOrdersServer) Send(m *Order) error {
	return x.ServerStream.SendMsg(m)
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "searchOrders",
			Handler:       _OrderService_SearchOrders_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "order-service.proto",
}
